import { ListView, ScrollView, CheckBox, VerticalBox } from "std-widgets.slint";
import { MenuItem, Menu } from "../../components/ui/menu/menu.slint";
import { MenuArea } from "../../components/ui/menu/menu_area.slint";

Pane := Rectangle {
    // TouchArea {}
}

export struct TableWithNumberCol := {
    text: string,
}

export struct TableWithNumberRow := {
    cols: [{text: string}],
    checkbox_state: bool,
}

export TableWithNumber := Pane {
    property <bool> menu_enabled: false;
    property <int> current_index;
    property <length> item_height: 30px;
    property <[TableWithNumberRow]> rows;
    property <[MenuItem]> menu_items: [{text: "⌨️  编辑"}/*, {text: "❌ 删除"}*/];
    callback right_click_on_the_view(int, length, length, [{text: string}]);

    // private functions
    callback right_click_view(length, length);
    right_click_view(mx, my) => {
        current_index = my/item_height;
        rows[current_index].checkbox_state = !rows[current_index].checkbox_state;
        root.right_click_on_the_view(current_index, mx, my, rows[current_index].cols);
    }
    callback menu_on_clicked(int, string);

    lv := ScrollView {
        viewport-height: rows.length * root.item_height;
        // height: 600px;

        for r[index] in rows: Rectangle {
            // header
            if index == 0: Rectangle {
                x: 5px;
                y: 0;
                height: root.item_height;
                HorizontalLayout {
                    Text {
                        vertical-alignment: center;
                        horizontal-stretch: 1;
                        text: r.cols[0].text;
                    }
                    Text {
                        vertical-alignment: center;
                        horizontal-stretch: 4;
                        text: r.cols[1].text;
                    }
                }
            }

            if index > 0: Rectangle {
                // padding-left: 10px;

                x: 5px;
                y: index * self.height;
                height: root.item_height;

                HorizontalLayout {
                    CheckBox {
                        horizontal-stretch: 1;
                        text: r.cols[0].text;
                        checked: r.checkbox_state;
                        // enabled: false;
                    }
                    Text {
                        horizontal-stretch: 4;
                        vertical-alignment: center;
                        text: r.cols[1].text;
                    }
                }
            }

            MenuArea {
                enabled <=> root.menu_enabled;
                menu_items <=> root.menu_items;
                right_click_view(x, y) => {root.right_click_view(x, y)}
                on_clicked(int, string) => {root.menu_on_clicked(int, string)}
            }
        }
    }
}


