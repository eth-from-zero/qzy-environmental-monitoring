import {TabWidget, Button, GroupBox, VerticalBox, HorizontalBox} from "std-widgets.slint";
import {TableWithNumber} from "../common/ui/table_with_number.slint";
import {ListContainingCheckbox} from "../common/ui/list_containing_checkbox.slint";
import {VerticalDividingLine, HorizontalDividingLine} from "../components/ui/dividing_line/dividing_line.slint";
import {DeviceEditDialog} from "device_edit.slint";
import {TextLineEdit} from "../common/ui/text_lineedit.slint";
import {SerialPortSettingDialog} from "serial_port_dialogs/setting.slint";

OtherPage := VerticalLayout {
    property <length> ph;
    property <length> pw;

    property <string> port_no;
    property <string> baud_rate;

    callback prev_clicked;
    callback next_clicked;

    // private variants
    property <bool> show_edit_dialog: false;
    property <bool> show_setting_dialog: false;

    // util functions
    callback close;
    close() => {
        show_edit_dialog = false;
        show_setting_dialog = false;
    }

    hl1 := HorizontalBox {
        property <length> h: 720px;

        Image {
            horizontal-stretch: 1;

            width: 250px;
            // width: length(root.pw/4);
            height: parent.h;
            source: @image-url("images/config1.png");
        }

        gb := GroupBox {
            horizontal-stretch: 3;

            title: "其他配置";

            property <length> button-width: 280px;
            property <length> button-height: 90px;

            VerticalBox {
                alignment: center;

                for name in [
                    {text: "远程平台输出配置"},
                    {text: "远程协议反控配置"}
                ]: Button {
                    text: name.text;
                    // width: gb.button-width;
                    // height: gb.button-height;
                }
            }
        }
    }

    HorizontalLayout {
        padding-right: 30px;
        alignment: end;

        Button {
            text: "上一步(P)";
            width: 80px;
            height: 30px;

            clicked => {
                close();
                root.prev_clicked()
            }
        }

        HorizontalDividingLine{ value: 30px; }

        Button {
            text: "下一步";
            width: 80px;
            height: 30px;

            clicked => {
                close();
                root.next_clicked()
            }
        }

        HorizontalDividingLine{ value: 30px; }

        Button {
            text: "退出(C)";
            width: 80px;
            height: 30px;
        }
    }

    if show_setting_dialog: SerialPortSettingDialog {
        on_ok_clicked => {
            show_setting_dialog = false;
        }
        on_cancel_clicked => {
            show_setting_dialog = false;
        }
    }
}


