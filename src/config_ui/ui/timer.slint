
Pane := Rectangle {
    TouchArea {
        enabled: true;
    }
}

TimerDialog := Window {
    property <string> device_no;
    property <string> device_name;
    property <string> device_address;
    property <string> device_alarm_group_no;
    property <string> device_alarm_source_no;
    property <string> device_type_desc;

    callback on_ok_clicked;
    callback on_cancel_clicked;

    // private
    property <bool> show_operator_edit_dialog: false;
    property <int> tag_current_index: 0;
    property <[{text: string}]> current_row;
    property <string> current_op;

    Pane {
    x: 100px;
    y: 0px;
    width: 800px;
    height: 800px;
    background: white;
    border-width: 2px;
    border-color: grey;
    border-radius: 3px;

    VerticalBox {

        TableWithNumber {
            vertical-stretch: 1;

            rows: [
                  {cols: [
                      {text: "类型"}, {text: "状态"}, {text: "优先级"}, {text: "重量"},
                      {text: "最多并行"}, {text: "描述"}
                  ]},
                  {cols: [
                      {text: "周期"}, {text: "非活跃"}, {text: "10"},
                      {text: "10"}, {text: "1"}, {text: "和利时PLC_2012版数据采集定时器"}
                  ]},
            ];
            // height: hl1.h - 150px;
            // width: 750px;

            menu_on_clicked(index, t) => {
            }

            menu_items: [{text: "📩 编辑"}, {text: "📩 定义为电控设备"}];
            menu_enabled: true;
        }

        VerticalDividingLine{ value: 30px; }

        HorizontalLayout {
            vertical-stretch: 1;

            padding-right: 30px;
            alignment: end;

            Button {
                text: "确定";
                width: 80px;
                height: 30px;

                clicked => {
                    root.on_ok_clicked()
                }
            }

            HorizontalDividingLine{ value: 30px; }

            Button {
                text: "取消";
                width: 80px;
                height: 30px;

                clicked => {
                    root.on_cancel_clicked()
                }
            }
        }

    } // VerticalBox
    }

    if show_operator_edit_dialog: OperatorEditDialog {
        on_ok_clicked => {
            show_operator_edit_dialog = false;
        }
        on_cancel_clicked => {
            show_operator_edit_dialog = false;
        }
    }
}
