import { ListView, ScrollView } from "std-widgets.slint";
import { MenuItem, Menu } from "../../ui/menu/menu.slint";

Pane := Rectangle {
    // callback right_click_on_the_item(int, length, length);

    // // capture all clicks
    // TouchArea {
    //     pointer-event(pe) => {
    //         if (pe.kind == PointerEventKind.down &&
    //             (pe.button == PointerEventButton.left || pe.button == PointerEventButton.left)) {
    //             root.right_click_on_the_item(index, self.mouse-x, self.mouse-y);
    //         }
    //     }
    // }

    TouchArea {}
}

export struct Col := {
    text: string,
}

export struct Row := {
    // cols: [Col]
    text: string
}

export TableView := Pane {
    width: 500px;
    height: 500px;

    property <length> mx;
    property <length> my;
    property <int> current_index;
    property <length> item_height: 100px;
    property <bool> showed: false;
    property <[Row]> rows: [{text: "1"}, {text: "2"}, {text: "3"}, {text: "4"}, {text: "5"}, {text: "6"}];
    // property <[Row]> rows: [{cols: [{text: "hello"}]}];
    // property <[{cols: [{text: string}]}]> rows: [{cols: [{text: "hello"}]}];
    // property <[Row]> rows: [{text: "hello"}];
    // property <[{cols: [{text: string}]}]> rows;
    // callback right_click_on_the_item(int, length, length) <=> self.right_click_on_the_item(int, length, length);
    callback right_click_on_the_item(int, length, length);
    callback right_click_on_the_view(int, length, length, string);
    callback menu_on_clicked(int);

    lv := ScrollView {
        viewport-height: rows.length * root.item_height;
        // height: 600px;

        for r[index] in rows: Rectangle {
            Rectangle {
                y: index * self.height;
                height: root.item_height;

                Text{
                    text: r.text;
                }

                // TouchArea {
                //     pointer-event(pe) => {
                //         if (pe.kind == PointerEventKind.down &&
                //             (pe.button == PointerEventButton.left || pe.button == PointerEventButton.left)) {
                //             // root.right_click_on_the_item(index, self.mouse-x, self.mouse-y);
                //             root.right_click_on_the_item(index, lv.viewport-height, lv.viewport-y);
                //             showed = true;
                //         }
                //     }
                // }
            }

            // if showed: Rectangle { x: mx; y: my; height:20px; width: 20px; background: yellow; }
            TouchArea {
                if showed: menu := Menu {
                    x: mx;
                    y: my + 1px;
                    items: [{text: "add"}, {text: "delete"}];
                    on_clicked(int) => {root.menu_on_clicked(int)}
                }

                pointer-event(pe) => {
                    if (pe.kind == PointerEventKind.down &&
                        // (pe.button == PointerEventButton.left || pe.button == PointerEventButton.left)) {
                        // (pe.button == PointerEventButton.right)) {
                        (pe.button == PointerEventButton.left)) {
                        current_index = self.mouse-y/item_height;
                        root.right_click_on_the_view(current_index, self.mouse-x, self.mouse-y, rows[current_index].text);

                        mx = self.mouse-x;
                        my = self.mouse-y;
                        showed = true;
                    }
                }
            }
        }

        // TouchArea {
        //     // pointer-event(pe) => {
        //     //     if (pe.kind == PointerEventKind.down &&
        //     //         (pe.button == PointerEventButton.left || pe.button == PointerEventButton.left)) {
        //     //         root.right_click_on_the_view(self.mouse-x, self.mouse-y);
        //     //     }
        //     // }
        // }
    }
}

